%% Stats for intervention analyses
% October 2021
% The script will run permutation analyses on the intervention ERPs and
% TFRs

% Call the configuration script 
cd('I:\SCIENCE-NEXS-neurolab\PROJECTS\PLAYMORE\EEG_project1\Analyses\B-D_EEG_Repo\Scripts');
configuration

%load the data
cd('I:\SCIENCE-NEXS-neurolab\PROJECTS\PLAYMORE\EEG_project1\Analyses\B-D_EEG_Repo\Results\Intervention');
ET_ERP_Int = importdata('ET_ERP_Int.mat');
TS_ERP_Int = importdata('TS_ERP_Int.mat');
all_Int_ERP_noage = importdata('all_ERP_int_noage.mat');
    
%%                                                  BETWEEN GROUP TESTS
%% Prepare the groups

% Place the group value in a separate array 
group = ones(1, (length(TS_ERP_Int)+length(ET_ERP_Int)));
group((length(TS_ERP_Int)+1): end) = 2;

%% Setup study design 
% Define the study design: in this example it is a between-group t-test.
% ivar = the independent variable, i.e. group or condition.
% uvar = unit of observation, i.e. identifier per subject 

n_ctrl = sum(group == 1); % number of TS
n_Dptns = sum(group == 2); % number of ET

ivar  = [ones(n_ctrl,1); ones(n_Dptns,1)*2]; %this is the group variable as a column
uvar  = 1:length(group); %number of participants
design = [group; uvar]';

%% Between-group permutation P300a

cd('I:\SCIENCE-NEXS-neurolab\PROJECTS\PLAYMORE\EEG_project1\Analyses\B-D_EEG_Repo\Results\Stats');

cfg = [];
cfg.method              = 'montecarlo'; 
cfg.statistic           = 'ft_statfun_indepsamplesT';
cfg.correctm            = 'cluster';
cfg.clusteralpha        = 0.05;        
cfg.clusterstatistic    = 'maxsum';
cfg.tail                = 0;
cfg.clustertail         = 0;            % = two-tailed hypothesis
cfg.alpha               = 0.025;        % = 0.05/2 for two-tailed hypothesis
cfg.channel             = [12 13 14]; %F1, Fz, F2
cfg.latency             = [0.15 0.3]; 
cfg.numrandomization    = 1000;
cfg.neighbours          = neighbours;
cfg.design              = design;
cfg.ivar                = 1; %group identifier specifies the column in the matrix "design" which is the independent variable
stats = ft_timelockstatistics(cfg, TS_ERP_Int{:}, ET_ERP_Int{:}); 

save stats_P300a_int stats;

%%Plot t-values for clusters
cfg               = [];
cfg.marker        = 'on';
cfg.layout        = layout_file;
cfg.channel       = 'EEG';
cfg.parameter     = 'stat';  % plot the t-value
cfg.maskparameter = 'mask';  % use the thresholded probability to mask the data
cfg.maskstyle     = 'box';
figure; ft_multiplotER(cfg, stats);

% identify the cluster latency P300
pos = stats.posclusterslabelmat == 1;
pos =[pos;stats.time];

save cluster_P300a_int pos;


% ----------------------- REGRESSION WITH TASK ACCURACY
%make sure that the design structre doesn't get confused with the
%between-subject design so clear it first
clear design
clear stats
%accuracy corrected for age
n1 = 18; 
design(1,1:n1)       = [94.62105 87.08857 79.55000 91.97027 99.64000 99.51000 94.48421 99.51000 99.51000 91.97027 99.64000 99.36000 99.36000 96.99744 97.13077 79.38750 96.99744 99.64000]; % add the accuracy variable 


cfg = [];
cfg.statistic        = 'ft_statfun_indepsamplesregrT';
cfg.method           = 'montecarlo';
cfg.numrandomization = 1000;
cfg.correctm         = 'cluster';
cfg.clusteralpha     = 0.05;   
cfg.alpha            = 0.025;
cfg.channel          = [12 13 14];% [12 13 14 21 22 23 ]; %'Fz'; %AFz, Fz, FCz [6 13 22];
cfg.neighbours       = neighbours;
cfg.latency          = [0.15 0.3]; 
cfg.design           = design;
cfg.ivar             = 1;

stats = ft_timelockstatistics(cfg, all_Int_ERP_noage{:});
save regr_P300a_int stats;


